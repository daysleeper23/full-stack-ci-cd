name: Test & Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]
jobs:
  simple_deployment_pipeline:
    env: 
      DEPLOY_FLAG: ${{ !contains(github.event.head_commit.message, '#skip') && github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: install dependencies
        run: npm install
      - name: lint
        run: npm run eslint
      - name: build 
        run: npm run build
      - name: test
        run: npm run test
      - name: e2e setup
        run: npx playwright install --with-deps
      - name: e2e test
        run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Trigger Render deployment
        if: ${{ env.DEPLOY_FLAG == 'true' }}
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
      - name: The job has succeeded
        # uses: rjstone/discord-webhook-notify@v1
        if: ${{ env.DEPLOY_FLAG == 'true' && success() }}
        # with:
        #   severity: info
        #   details: Test Succeeded!
        #   webhookUrl: "${{ secrets.DISCORD_WEBHOOK }}"
        run: |
          RESPONSE=$(curl -s -o "%{http_code}" -X POST \
          -H "Content-Type: application/json" \
          -d '{"content": "Test & Deploy Failed!"}' \
          ${{ secrets.DISCORD_WEBHOOK }})
          echo "HTTP Response: $RESPONSE"
      - name: Deploy Failed
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: Test & Deploy Failed!
          webhookUrl: "${{ secrets.DISCORD_WEBHOOK }}"
  tag_release:
    env:
      RELEASE_FLAG: ${{ !contains(github.event.head_commit.message, '#skip') && github.event_name == 'push' }}
    needs: [simple_deployment_pipeline]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        if: ${{ env.RELEASE_FLAG == 'true' }}
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: true
          DEFAULT_BUMP: patch
      - name: Get new tag
        if: ${{ env.RELEASE_FLAG == 'true' }}
        run: 'echo "new_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV'
      - name: Output new tag
        if: ${{ env.RELEASE_FLAG == 'true' }}
        run: 'echo "New Tag: ${{ env.new_tag }}"'
      - name: Release Failed
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: Bumping The Tag Failed!
          webhookUrl: "${{ secrets.DISCORD_WEBHOOK }}"