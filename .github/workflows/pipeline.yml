name: Test & Deployment pipeline

env:
  NO_SKIP: ${{ !contains(github.event.head_commit.message, '#skip') && github.event_name == 'push' }}

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]
jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: contain
        run: echo "${{ contains(github.event.head_commit.message, '#skip') }}"
      - name: event
        run: echo "${{ github.event_name == 'push' }}"
      - name: NO_SKIP = 
        run: echo "${{ env.NO_SKIP }}"
  #     - name: install dependencies
  #       run: npm install
  #     - name: lint
  #       run: npm run eslint
  #     - name: build 
  #       run: npm run build
  #     - name: test
  #       run: npm run test
  #     - name: e2e setup
  #       run: npx playwright install --with-deps
  #     - name: e2e test
  #       run: npm run test:e2e
  #     - uses: actions/upload-artifact@v4
  #       if: ${{ !cancelled() }}
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30
  #     - name: Trigger Render deployment
  #       if: ${{ env.NO_SKIP == 'true' }}
  #       run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
    
  # tag_release:
  #   needs: [simple_deployment_pipeline]
  #   if: ${{ github.ref == 'refs/heads/main' && github.env.NO_SKIP == 'true' }}
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Bump version and push tag
  #       uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         WITH_V: true
  #         PRERELEASE: true
  #         DEFAULT_BUMP: patch
  #     - name: Get new tag
  #       run: 'echo "new_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV'
  #     - name: Output new tag
  #       run: 'echo "New Tag: ${{ env.new_tag }}"'